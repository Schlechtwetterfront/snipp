<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:clipman.Resources">
    <Color x:Key="Button.BackgroundColor" R="169" G="169" B="169" A="255"/>
    <Color x:Key="Button.Hover.BackgroundColor" R="60" G="60" B="60" A="255"/>
    <SolidColorBrush x:Key="Button.Background" Color="DarkGray"/>

    <Style x:Key="GenericButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource Button.Background}"/>
    </Style>

    <Storyboard x:Key="Button.Hover.InAnimation">
        <ColorAnimation Storyboard.TargetProperty="(Background).Color"
                        To="{StaticResource Button.Hover.BackgroundColor}"
                        Duration="{StaticResource AnimationDuration}"
                        />
    </Storyboard>

    <Storyboard x:Key="Button.Hover.OutAnimation">
        <ColorAnimation Storyboard.TargetProperty="(Background).Color"
                        To="{StaticResource Button.BackgroundColor}"
                        Duration="{StaticResource AnimationDuration}"
                        FillBehavior="Stop"
                        />
    </Storyboard>

    <ControlTemplate x:Key="PinIcon">
        <Canvas  Width="12" Height="12">
            <Polygon Fill="{TemplateBinding Background}"
                     Points="0,0 6,0 5,1 5,4 6,6 4,6 3,12 2,6 0,6 1,4 1,1"
                     RenderTransformOrigin=".5,0"
                     Canvas.Top="3"
                     >
                <Polygon.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-45" />
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                    </TransformGroup>
                </Polygon.RenderTransform>
            </Polygon>
        </Canvas>
    </ControlTemplate>

    <Style x:Key="LeftClickContextMenu" TargetType="Button">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Click">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen" Storyboard.Target="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TrashButton" TargetType="Button" BasedOn="{StaticResource GenericButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}">
                            <Polygon Points="0,3 1,1 5,1 5,0 9,0 9,1 13,1 14,3" Fill="{TemplateBinding Background}" StrokeThickness="0" Margin="0,0,0,1"/>
                            <Polygon Points="0,0 14,0 13,2 13,11 11,13 3,13 1,11 1,2" Fill="{TemplateBinding Background}" StrokeThickness="0"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Button.Hover.InAnimation}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Button.Hover.OutAnimation}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearItemsButton" TargetType="Button" BasedOn="{StaticResource GenericButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="Transparent" SnapsToDevicePixels="True">
                        <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="True">
                            <Canvas Height="24" Width="24"
                                    x:Name="Canvas"
                                    SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Canvas.RenderTransform>
                                    <ScaleTransform />
                                </Canvas.RenderTransform>
                                <Rectangle Width="20" Fill="LightGray" Height="4"
                                           Canvas.Top="3"
                                           Canvas.Left="2"
                                           SnapsToDevicePixels="True"
                                           />
                                <Rectangle Width="6" Fill="LightGray" Height="4"
                                           Canvas.Top="10"
                                           Canvas.Left="2"
                                           SnapsToDevicePixels="True"
                                           />
                                <Rectangle Width="6" Fill="LightGray" Height="4"
                                           Canvas.Top="17"
                                           Canvas.Left="2"
                                           SnapsToDevicePixels="True"
                                           />
                                <!--<Rectangle Width="20" Fill="LightGray" Height="2" Canvas.Top="16"/>-->

                                <Rectangle Width="16"
                                           Height="4"
                                           Fill="{TemplateBinding Background}"
                                           RenderTransformOrigin="0.5,0.5"
                                           Canvas.Bottom="7"
                                           Canvas.Right="0"
                                           SnapsToDevicePixels="True">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="45"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Rectangle Width="16"
                                           Height="4"
                                           Fill="{TemplateBinding Background}"
                                           RenderTransformOrigin="0.5,0.5"
                                           Canvas.Bottom="7"
                                           Canvas.Right="0"
                                           SnapsToDevicePixels="True">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-45"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Canvas>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Background).Color"
                                                        To="Crimson"
                                                        Duration="{StaticResource AnimationDuration}"
                                                        />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Button.Hover.OutAnimation}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Canvas" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Canvas" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Canvas" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Canvas" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TriDotButton" TargetType="Button" BasedOn="{StaticResource GenericButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" SnapsToDevicePixels="True">
                        <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="True" Orientation="Horizontal">
                            <Ellipse Width="5" Height="5"
                                     Margin="2"
                                     Fill="{TemplateBinding Background}"
                                     SnapsToDevicePixels="True"
                                     />
                            <Ellipse Width="5" Height="5"
                                     Margin="2"
                                     Fill="{TemplateBinding Background}"
                                     SnapsToDevicePixels="True"
                                     />
                            <Ellipse Width="5" Height="5"
                                     Margin="2"
                                     Fill="{TemplateBinding Background}"
                                     SnapsToDevicePixels="True"
                                     />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Button.Hover.InAnimation}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Button.Hover.OutAnimation}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>